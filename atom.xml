<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>愿你出走半生，归来仍是少年</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://stephencurry6666.github.io/"/>
  <updated>2020-05-05T10:28:31.566Z</updated>
  <id>https://stephencurry6666.github.io/</id>
  
  <author>
    <name>Stephencurry6666</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JavaSE篇-Day2笔记</title>
    <link href="https://stephencurry6666.github.io/2020/05/05/JavaSE-Day(2)%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://stephencurry6666.github.io/2020/05/05/JavaSE-Day(2)%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2020-05-05T07:12:42.825Z</published>
    <updated>2020-05-05T10:28:31.566Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Java语言基础"><a href="#Java语言基础" class="headerlink" title="Java语言基础"></a>Java语言基础</h1><h2 id="Java基础语法"><a href="#Java基础语法" class="headerlink" title="Java基础语法"></a>Java基础语法</h2><h3 id="1-关键字"><a href="#1-关键字" class="headerlink" title="1.关键字"></a>1.关键字</h3><a id="more"></a><p><strong>关键字概述：</strong><br>被Java语言赋予特定含义的单词。</p><p><strong>关键字特点：</strong><br>组成关键字的字母全部小写。</p><p><strong>注意事项：</strong><br>goto和const是保留字，在一般的高级Java编译器中，针对关键字都有特殊的颜色标记。</p><ul><li><strong>Java关键字</strong></li></ul><p><img src="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1588673781789&amp;di=405fa28b84d8a8b0464f054e43655198&amp;imgtype=0&amp;src=http%3A%2F%2Fpic4.zhimg.com%2Fv2-b1d047a34f15efeabd5211fd54f73b0b_b.jpg" alt="Java关键字"></p><h3 id="2-标识符"><a href="#2-标识符" class="headerlink" title="2.标识符"></a>2.标识符</h3><p><strong>标识符概述：</strong><br>就是给类，接口，方法，变量等起名字时使用的字符序列</p><p><strong>组成规则：</strong></p><ul><li><strong>英文大小写字母</strong></li><li><strong>数字字符</strong></li><li><strong>$和_</strong></li></ul><p><strong>注意事项：</strong></p><ul><li><strong>不能以数字开头</strong></li><li><strong>不能是Java中的关键字</strong></li><li><strong>区分大小写</strong></li></ul><h3 id="3-标识符的常见命名规则"><a href="#3-标识符的常见命名规则" class="headerlink" title="3.标识符的常见命名规则"></a>3.标识符的常见命名规则</h3><p><strong>注意事项：</strong><br>见名知意</p><ul><li><strong>举例：我要定义一个学生类</strong></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">class Student &#123;&#125;</span><br></pre></td></tr></table></figure><p><strong>包：</strong><br>其实就是文件夹，用于把相同的类名进行区分，全部小写</p><ul><li><strong>单级：liuyi</strong></li><li><strong>多级：cn.itcast</strong></li></ul><p><strong>类或者接口：</strong></p><ul><li><strong>一个单词：单词的首字母必须大写,举例：Student，Dog</strong></li><li><strong>多个单词：每个单词的首字母必须大写，举例：HelloWorld，StudentName</strong></li></ul><p><strong>方法或者变量：</strong></p><ul><li><strong>一个单词：单词的首字母小写，举例：main，age</strong></li><li><strong>多个单词：从第二个单词开始，每个单词的首字母大写，举例：studentAge,showAllNames</strong></li></ul><p><strong>常量：</strong></p><ul><li><strong>一个单词组成：全部大写，举例：PI</strong></li><li><strong>多个单词组成：每个字母都大写，用_隔开，举例：STUDENT_MAX_AGE</strong></li></ul><h3 id="4-注释概述及其分类"><a href="#4-注释概述及其分类" class="headerlink" title="4.注释概述及其分类"></a>4.注释概述及其分类</h3><p><strong>注释概述：</strong><br>用于解释说明的文字</p><p><strong>Java中注释分类格式：</strong></p><ul><li><strong>单行注释：格式：//注释文字</strong></li><li><strong>多行注释：格式：/星 注释文字 星/，注意：多行不可以嵌套使用，而单行是可以的</strong></li><li><strong>文档注释：格式：/星星 注释文字 星/</strong></li></ul><h3 id="5-HelloWorld案例加入注释"><a href="#5-HelloWorld案例加入注释" class="headerlink" title="5.HelloWorld案例加入注释"></a>5.HelloWorld案例加入注释</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line"> 需求：我准备写一个java程序，把&quot;HelloWorld&quot;这句话输出在控制台</span><br><span class="line"></span><br><span class="line">分析：</span><br><span class="line">A:要写一个Java程序，必须定义类</span><br><span class="line">B:把数据能够输出，说明我们的程序是可以独立运行的，而程序要独立运行，必须定义main方法</span><br><span class="line">C:把数据输出在控制台，必须使用输出语句</span><br><span class="line">实现：</span><br><span class="line">A:java语言提供了一个关键字：class用来定义类，后面跟的是类名</span><br><span class="line">B:main方法的格式是固定的：</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">C:输出语句的格式是固定的：</span><br><span class="line">System.out.println(&quot;HelloWorld&quot;);</span><br><span class="line">&quot;HelloWorld&quot;这个内容是可以改变的</span><br><span class="line">*&#x2F;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;这是我的HelloWorld案例</span><br><span class="line">class HelloWorld &#123;</span><br><span class="line">&#x2F;*</span><br><span class="line">为了程序能够独立运行，定义main方法</span><br><span class="line">main方法是程序的入口</span><br><span class="line">被jvm自动调用</span><br><span class="line">*&#x2F;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">  &#x2F;&#x2F;为了把数据显示在控制台，我们就使用了输出语句</span><br><span class="line"> System.out.println(&quot;HelloWorld&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-注释的作用"><a href="#6-注释的作用" class="headerlink" title="6.注释的作用"></a>6.注释的作用</h3><p>略过，在Eclipse Jee 2018-12程序中编写Java代码时，有错误的话，编译器会提示。</p><h3 id="7-常量的概述和使用"><a href="#7-常量的概述和使用" class="headerlink" title="7.常量的概述和使用"></a>7.常量的概述和使用</h3><p><strong>常量概述：</strong><br>在程序执行的过程中其值不可以发生改变</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">    常量：</span><br><span class="line">        在程序执行过程中，其值不发生改变的量。</span><br><span class="line"></span><br><span class="line">    分类：</span><br><span class="line">        A:字面值常量</span><br><span class="line">        B:自定义常量(后面讲)</span><br><span class="line"></span><br><span class="line">    字面值常量</span><br><span class="line">        A:字符串常量  用双引号括起来的内容。</span><br><span class="line">            举例：&quot;hello&quot;,&quot;world&quot;,&quot;HelloWorld&quot;</span><br><span class="line">        B:整数常量   所有的整数</span><br><span class="line">            举例：100,200</span><br><span class="line">        C:小数常量   所有的小数</span><br><span class="line">            举例：10.23,110.11</span><br><span class="line">D:字符常量用单引号括起来的内容</span><br><span class="line">举例：&#39;a&#39;,&#39;A&#39;,&#39;0&#39;</span><br><span class="line">错误的：&#39;ab&#39;</span><br><span class="line">E:布尔常量比较特殊</span><br><span class="line">举例：true,false</span><br><span class="line">F:空常量后面讲</span><br><span class="line">举例：null</span><br><span class="line">*&#x2F;</span><br><span class="line">class ConstantDemo &#123;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">&#x2F;&#x2F;字符串常量的输出</span><br><span class="line">System.out.println(&quot;hello&quot;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;整数常量的输出</span><br><span class="line">System.out.println(100);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;小数常量的输出</span><br><span class="line">System.out.println(100.10);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;字符常量的输出</span><br><span class="line">System.out.println(&#39;a&#39;);</span><br><span class="line">System.out.println(&#39;A&#39;);</span><br><span class="line">System.out.println(&#39;0&#39;);</span><br><span class="line">&#x2F;&#x2F;这个是有问题的</span><br><span class="line">&#x2F;&#x2F;System.out.println(&#39;ab&#39;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;布尔常量的输出</span><br><span class="line">System.out.println(true);</span><br><span class="line">System.out.println(false);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-进制概述以及二进制、八进制、十六进制图解"><a href="#8-进制概述以及二进制、八进制、十六进制图解" class="headerlink" title="8.进制概述以及二进制、八进制、十六进制图解"></a>8.进制概述以及二进制、八进制、十六进制图解</h3><p><img src="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1588680207620&amp;di=5dc7fbed0760175d40d1bbb10baa7b8d&amp;imgtype=0&amp;src=http%3A%2F%2Fgss0.baidu.com%2F9fo3dSag_xI4khGko9WTAnF6hhy%2Fzhidao%2Fpic%2Fitem%2Fd439b6003af33a87736ff400c45c10385343b5ae.jpg" alt="进制"></p><p><strong>二进制-&gt;八进制：</strong><br>把二进制的数据，从右开始，每三位一组合，最左边不够的时候，补0。然后，分别计算出对应的十进制数值，最后，再把每个十进制的数据组合起来，就是一个八进制数据。</p><p><strong>二进制-&gt;十六进制：</strong><br>把二进制的数据，从右开始，每四位一组合，最左边不够的时候，补0。然后，分别计算出对应的十进制数值，最后，再把每个十进制的数据组合起来，就是一个十六进制数据。</p><p><strong>规则：进制越大，表现形式越短</strong></p><h3 id="9-不同进制数据的表现形式"><a href="#9-不同进制数据的表现形式" class="headerlink" title="9.不同进制数据的表现形式"></a>9.不同进制数据的表现形式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">不同进制的数据表现：</span><br><span class="line">二进制：由0，1组成。以0b开头。</span><br><span class="line">八进制：由0,1,...7组成。以0开头。</span><br><span class="line">十进制：由0,1,...9组成。默认整数是十进制。</span><br><span class="line">十六进制：由0,1,...9,a,b,c,d,e,f(大小写均可)组成。以0x开头。</span><br><span class="line">*&#x2F;</span><br><span class="line">class JinZhiDemo &#123;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">System.out.println(100); &#x2F;&#x2F;十进制</span><br><span class="line"></span><br><span class="line">System.out.println(0b100); &#x2F;&#x2F;二进制</span><br><span class="line">System.out.println(0100); &#x2F;&#x2F;八进制</span><br><span class="line">System.out.println(0x100); &#x2F;&#x2F;十六进制</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="10-任意进制到十进制的转换"><a href="#10-任意进制到十进制的转换" class="headerlink" title="10.任意进制到十进制的转换"></a>10.任意进制到十进制的转换</h3><p><img src="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1588680802524&amp;di=c3fd9ec5b2d6bae9fefda7479f3c2742&amp;imgtype=0&amp;src=http%3A%2F%2Fwww.myexception.cn%2Fimg%2F2015%2F07%2F11%2F060509721.png" alt="转换"></p><p><strong>系数：每一个位上的数据值本身就是系数。</strong></p><p><strong>基数：x进制的基数就是x。</strong></p><p><strong>权：我们针对每一个位上的数据进行编号，从右边，并且是从0开始编号，这个编号就是该位上数据的权值。</strong></p><p><strong>PS：每一个位上的系数x基数^权次幂相加。</strong></p><h3 id="11-十进制到任意进制的转换"><a href="#11-十进制到任意进制的转换" class="headerlink" title="11.十进制到任意进制的转换"></a>11.十进制到任意进制的转换</h3><p><strong>方法：这个数对基数依次取余，将余数倒序输出，在倒序输出余数之前正序输出最后一次的商。（这个方法是很简单的一种方式，可以大大的节省时间）。</strong></p><p><strong>将十进制转成八进制：</strong><br>579 / 8 = 72　．．．3<br>72 / 8 =9　．．．0<br>9 / 8 =1　．．．1</p><p>先输出最后一次计算的商，然后倒序从下到上输出余数<br>八进制的 576 为　1103</p><h3 id="12-快速的进制转换法"><a href="#12-快速的进制转换法" class="headerlink" title="12.快速的进制转换法"></a>12.快速的进制转换法</h3><p><strong>8421码</strong></p><p><img src="https://img-blog.csdnimg.cn/20181213115022126.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjUxODA2Mg==,size_16,color_FFFFFF,t_70" alt="8421"></p><h3 id="13-原码、反码、补码的讲解"><a href="#13-原码、反码、补码的讲解" class="headerlink" title="13.原码、反码、补码的讲解"></a>13.原码、反码、补码的讲解</h3><p><strong>在探求为何机器要使用补码之前, 让我们先了解原码, 反码和补码的概念.对于一个数, 计算机要使用一定的编码方式进行存储. 原码, 反码, 补码是机器存储一个具体数字的编码方式。</strong></p><p><strong>原码：</strong><br>原码就是符号位加上真值的绝对值, 即用第一位表示符号, 其余位表示值. 比如如果是8位二进制:</p><p>[+1]原 = 0000 0001</p><p>[-1]原 = 1000 0001</p><p>第一位是符号位. 因为第一位是符号位, 所以8位二进制数的取值范围就是:[1111 1111 , 0111 1111]即[-127 , 127]，原码是人脑最容易理解和计算的表示方式。</p><p><strong>反码：</strong><br>反码的表示方法是:正数的反码是其本身；负数的反码是在其原码的基础上, 符号位不变，其余各个位取反。</p><p>[+1] = [00000001]原 = [00000001]反</p><p>[-1] = [10000001]原 = [11111110]反</p><p>可见如果一个反码表示的是负数, 人脑无法直观的看出来它的数值. 通常要将其转换成原码再计算。</p><p><strong>补码：</strong><br>补码的表示方法是:正数的补码就是其本身；负数的补码是在其原码的基础上, 符号位不变, 其余各位取反, 最后+1. (即在反码的基础上+1)。</p><p>[+1] = [00000001]原 = [00000001]反 = [00000001]补</p><p>[-1] = [10000001]原 = [11111110]反 = [11111111]补</p><p>对于负数, 补码表示方式也是人脑无法直观看出其数值的. 通常也需要转换成原码在计算其数值。</p><h3 id="14-变量的概述及格式"><a href="#14-变量的概述及格式" class="headerlink" title="14.变量的概述及格式"></a>14.变量的概述及格式</h3><p><strong>变量的概念：</strong></p><ul><li><p><strong>在程序执行的过程中，在某个范围内其值可以发生改变的量</strong></p></li><li><p><strong>从本质上讲，变量其实是内存中的一小块区域，使用变量名来访问这块区域，因此，每一个变量使用前必须要先申请（声明），然后必须进行赋值（填充内容），才能使用。</strong></p></li></ul><p><strong>变量定义格式：</strong></p><ul><li><strong>数据类型 变量名 = 初始化值;</strong></li></ul><p>注意：格式是固定的，记住格式，以不变应万变</p><p><img src="https://upload-images.jianshu.io/upload_images/5238858-60ecd9255c14ed89.png?imageMogr2/auto-orient/strip|imageView2/2/w/554/format/webp" alt="变量"></p><h3 id="15-数据类型的概述和分类和定义不同数据类型的变量"><a href="#15-数据类型的概述和分类和定义不同数据类型的变量" class="headerlink" title="15.数据类型的概述和分类和定义不同数据类型的变量"></a>15.数据类型的概述和分类和定义不同数据类型的变量</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">数据类型：Java是一种强类型的语言，针对每一种数据都定义了明确的数据类型。</span><br><span class="line"></span><br><span class="line">数据类型分类：</span><br><span class="line">A:基本数据类型</span><br><span class="line">B:引用数据类型(类,接口,数值)</span><br><span class="line"></span><br><span class="line">基本数据类型:4类8种</span><br><span class="line">A:整数占用字节数</span><br><span class="line">byte1</span><br><span class="line">short2</span><br><span class="line">int4</span><br><span class="line">long8</span><br><span class="line"></span><br><span class="line">B:浮点数</span><br><span class="line">float 4</span><br><span class="line">double 8</span><br><span class="line"></span><br><span class="line">C:字符</span><br><span class="line">char2</span><br><span class="line">D:布尔</span><br><span class="line">boolean1</span><br><span class="line"></span><br><span class="line">注意：</span><br><span class="line">整数默认是int类型</span><br><span class="line">浮点数默认是double类型。</span><br><span class="line"></span><br><span class="line">长整型后缀用L或者l标记。建议使用L。</span><br><span class="line">单精度浮点数用F或者f标记。建议使用F。</span><br><span class="line">*&#x2F;</span><br><span class="line">class DataTypeDemo &#123;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">&#x2F;&#x2F;定义变量的格式：</span><br><span class="line">&#x2F;&#x2F;数据类型 变量名 &#x3D; 初始化值;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;定义一个字节变量</span><br><span class="line">byte b &#x3D; 10;</span><br><span class="line">System.out.println(10);</span><br><span class="line">System.out.println(b);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;定义一个短整型变量</span><br><span class="line">short s &#x3D; 100;</span><br><span class="line">System.out.println(s);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;定义一个整型变量</span><br><span class="line">int i &#x3D; 1000;</span><br><span class="line">System.out.println(i);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;超过了int的范围</span><br><span class="line">&#x2F;&#x2F;int j &#x3D; 1000000000000;</span><br><span class="line">long j &#x3D; 1000000000000L;</span><br><span class="line">&#x2F;&#x2F;long j &#x3D; 100L;</span><br><span class="line">System.out.println(j);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;定义浮点数据变量</span><br><span class="line">float f &#x3D; 12.345F;</span><br><span class="line">System.out.println(f);</span><br><span class="line"></span><br><span class="line">double d &#x3D; 12.345;</span><br><span class="line">System.out.println(d);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;定义字符变量</span><br><span class="line">char ch &#x3D; &#39;a&#39;;</span><br><span class="line">System.out.println(ch);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;定义布尔变量</span><br><span class="line">boolean flag &#x3D; true;</span><br><span class="line">System.out.println(flag);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="16-使用变量的注意事项"><a href="#16-使用变量的注意事项" class="headerlink" title="16.使用变量的注意事项"></a>16.使用变量的注意事项</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">使用变量的时候要注意的问题：</span><br><span class="line">A:作用域</span><br><span class="line">变量定义在哪个大括号内，它就在这个大括号内有效。</span><br><span class="line">并且，在同一个大括号内不能同时定义同名的变量。</span><br><span class="line"></span><br><span class="line">B:初始化值</span><br><span class="line">没有初始化值的变量不能直接使用。</span><br><span class="line">你只要在使用前给值就行，不一定非要在定义的时候立即给值。</span><br><span class="line">推荐在定义的时候给值。</span><br><span class="line"></span><br><span class="line">定义变量的格式：</span><br><span class="line">a:数据类型 变量名 &#x3D; 初始化值;</span><br><span class="line">b:数据类型 变量名;</span><br><span class="line">  变量名 &#x3D; 初始化值;</span><br><span class="line"></span><br><span class="line">C:在一行上建议只定义一个变量</span><br><span class="line">可以定义多个，但是不建议</span><br><span class="line">*&#x2F;</span><br><span class="line">class DataTypeDemo2 &#123;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">&#x2F;&#x2F;定义变量</span><br><span class="line">int x &#x3D; 100;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;错误，不能有同名的</span><br><span class="line">&#x2F;&#x2F;int x &#x3D; 200;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;定义变量必须给值</span><br><span class="line">&#x2F;&#x2F;int y;</span><br><span class="line">&#x2F;&#x2F;System.out.println(y);</span><br><span class="line"></span><br><span class="line">int z;</span><br><span class="line">z &#x3D; 100;</span><br><span class="line">System.out.println(z);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;在一行上定义多个变量</span><br><span class="line">&#x2F;&#x2F;int a &#x3D; 10; int b &#x3D; 20; int c  &#x3D; 30;</span><br><span class="line">&#x2F;&#x2F;上面的写法可以，但是不建议。</span><br><span class="line">int a &#x3D; 10;</span><br><span class="line">int b &#x3D; 20;</span><br><span class="line">int c  &#x3D; 30;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;int d, e;</span><br><span class="line">&#x2F;&#x2F;d &#x3D; 40;</span><br><span class="line">&#x2F;&#x2F;e &#x3D; 50;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;int f,int g; &#x2F;&#x2F;错误</span><br><span class="line">&#x2F;&#x2F;int h; int i; &#x2F;&#x2F;正确</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="17-数据类型转换默认转换"><a href="#17-数据类型转换默认转换" class="headerlink" title="17.数据类型转换默认转换"></a>17.数据类型转换默认转换</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">+是一个运算符(我们等会讲解)。做加法运算的。</span><br><span class="line"></span><br><span class="line">一般来说，我们在运算的时候，要求参与运算的数据类型必须一致。</span><br><span class="line"></span><br><span class="line">注意：</span><br><span class="line">boolean类型不能转换为其他的数据类型</span><br><span class="line"></span><br><span class="line">默认转换(从小到大的转换)</span><br><span class="line">A:byte,short,char—int—long—float—double</span><br><span class="line">B:byte,short,char相互之间不转换，他们参与运算首先转换为int类型</span><br><span class="line">*&#x2F;</span><br><span class="line">class DataTypeDemo3 &#123;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">&#x2F;&#x2F;直接输出的方式做加法</span><br><span class="line">&#x2F;&#x2F;System.out.println(3 + 4);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;两个int类型做加法</span><br><span class="line">int x &#x3D; 3;</span><br><span class="line">int y &#x3D; 4;</span><br><span class="line">int z &#x3D; x + y;</span><br><span class="line">System.out.println(z);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;定义一个byte类型，一个int类型，做加法</span><br><span class="line">byte a &#x3D; 3;</span><br><span class="line">int b &#x3D; 4;</span><br><span class="line">System.out.println(a + b);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;可能损失精度</span><br><span class="line">&#x2F;&#x2F;byte c &#x3D;  a + b;</span><br><span class="line">int c &#x3D; a + b;</span><br><span class="line">System.out.println(c);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="18-数据类型转换强制转换"><a href="#18-数据类型转换强制转换" class="headerlink" title="18.数据类型转换强制转换"></a>18.数据类型转换强制转换</h3>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Java语言基础&quot;&gt;&lt;a href=&quot;#Java语言基础&quot; class=&quot;headerlink&quot; title=&quot;Java语言基础&quot;&gt;&lt;/a&gt;Java语言基础&lt;/h1&gt;&lt;h2 id=&quot;Java基础语法&quot;&gt;&lt;a href=&quot;#Java基础语法&quot; class=&quot;headerlink&quot; title=&quot;Java基础语法&quot;&gt;&lt;/a&gt;Java基础语法&lt;/h2&gt;&lt;h3 id=&quot;1-关键字&quot;&gt;&lt;a href=&quot;#1-关键字&quot; class=&quot;headerlink&quot; title=&quot;1.关键字&quot;&gt;&lt;/a&gt;1.关键字&lt;/h3&gt;
    
    </summary>
    
    
      <category term="Java系统学习-JavaSE篇" scheme="https://stephencurry6666.github.io/categories/Java%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0-JavaSE%E7%AF%87/"/>
    
    
      <category term="Java系统学习" scheme="https://stephencurry6666.github.io/tags/Java%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>JavaSE篇-Day1笔记</title>
    <link href="https://stephencurry6666.github.io/2020/05/04/JavaSE-Day(1)%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://stephencurry6666.github.io/2020/05/04/JavaSE-Day(1)%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2020-05-04T13:40:32.213Z</published>
    <updated>2020-05-04T14:04:49.354Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、计算机基础"><a href="#一、计算机基础" class="headerlink" title="一、计算机基础"></a>一、计算机基础</h2><h3 id="1-计算机概述"><a href="#1-计算机概述" class="headerlink" title="1.计算机概述"></a>1.计算机概述</h3><p>  <strong>计算机全称为：电子计算机，俗称电脑</strong></p><a id="more"></a><h3 id="2-计算机硬件和软件概述"><a href="#2-计算机硬件和软件概述" class="headerlink" title="2.计算机硬件和软件概述"></a>2.计算机硬件和软件概述</h3><ul><li><strong>计算机硬件是指计算机系统中由电子，机械和光电元件等组成的各种物理装置的总称。</strong></li><li><strong>计算机软件是指使用计算机过程中必不可少的东西，计算机软件可以使家算计按照事先预定好的顺序完成特定的功能，计算机软件按照其功能划分为系统软件和应用软件。</strong></li></ul><h3 id="3-软件开发和计算机语言概述"><a href="#3-软件开发和计算机语言概述" class="headerlink" title="3.软件开发和计算机语言概述"></a>3.软件开发和计算机语言概述</h3><ul><li><strong>软件开发：借助开发工具与计算机语言制作软件。</strong></li><li><strong>计算机语言：人与计算机之间进行信息交流沟通的一种特殊语言。</strong></li><li><strong>常见的计算机语言如C，C++，C#，JAVA，python。</strong></li></ul><h3 id="4-人机交互"><a href="#4-人机交互" class="headerlink" title="4.人机交互"></a>4.人机交互</h3><p>   <strong>交互方式：</strong></p><ul><li><strong>图形化界面：这种方式简单直观，使用者易于接受，容易操作上手。</strong></li><li><strong>命令性方式：需要一个控制台，输入特定的指令，让计算机完成一些操作。较为麻烦。需要记录住一些命令。</strong></li></ul><h3 id="5-键盘功能键和快捷键"><a href="#5-键盘功能键和快捷键" class="headerlink" title="5.键盘功能键和快捷键"></a>5.键盘功能键和快捷键</h3><p>   <strong>应该记住一些简单的功能键和快捷键</strong></p><ul><li><strong>Tab 缩进空格</strong></li><li><strong>Enter 回车</strong></li><li><strong>Window键</strong></li><li><strong>Ctrl+A全选 Ctrl+C 复制 Ctrl+V 粘贴 Ctrl+X剪切 Ctrl+Z 撤销 Ctrl+S 保存</strong></li></ul><h3 id="6-如何打开DOS控制台"><a href="#6-如何打开DOS控制台" class="headerlink" title="6.如何打开DOS控制台"></a>6.如何打开DOS控制台</h3><p>   <strong>Windows+R -&gt; cmd -&gt; 回车</strong></p><h3 id="7-常见的DOS讲解"><a href="#7-常见的DOS讲解" class="headerlink" title="7.常见的DOS讲解"></a>7.常见的DOS讲解</h3><ul><li><strong>d: +回车   盘符切换</strong></li><li><strong>dir(directory):   列出当前目录下的文件以及文件夹</strong></li><li><strong>md(make directory):    创建目录</strong></li><li><strong>rd(remove directory):   删除目录</strong></li><li><strong>cd(change directory):   改变指定目录（进入指定目录）</strong></li><li><strong>cd..:     退回上级目录</strong></li><li><strong>cd\:     退回根目录</strong></li><li><strong>exit:     推出dos命令行</strong></li><li><strong>cls(clear screen):    清屏</strong></li><li><strong>del(delete):   删除文件，删除一堆后缀名一样的文件，例如.txt</strong></li></ul><h2 id="二、Java语言基础"><a href="#二、Java语言基础" class="headerlink" title="二、Java语言基础"></a>二、Java语言基础</h2><h3 id="1-Java语言概述"><a href="#1-Java语言概述" class="headerlink" title="1.Java语言概述"></a>1.Java语言概述</h3><p><strong>Java语言由詹姆斯.高斯林发明</strong></p><h3 id="2-Java语言跨平台原理"><a href="#2-Java语言跨平台原理" class="headerlink" title="2.Java语言跨平台原理"></a>2.Java语言跨平台原理</h3><p><strong>Java是面向对象的语言，其重点特点是开源和跨平台</strong></p><p><img src="https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=52291647,1781400255&amp;fm=15&amp;gp=0.jpg" alt="Java语言的跨平台性"></p><h3 id="3-JDK与JRE的概述"><a href="#3-JDK与JRE的概述" class="headerlink" title="3.JDK与JRE的概述"></a>3.JDK与JRE的概述</h3><p><strong>JRE -&gt; Java运行环境</strong></p><p><strong>JDK -&gt; Java开发工具包，其中包含了JRE</strong></p><p><strong>简单而言：使用JDK开发完成的java程序，交给JRE去运行</strong></p><h3 id="4-JDK的下载、安装和卸载"><a href="#4-JDK的下载、安装和卸载" class="headerlink" title="4.JDK的下载、安装和卸载"></a>4.JDK的下载、安装和卸载</h3><p><strong>详情请看：<a href="https://blog.csdn.net/nuoyanli/article/details/86513950" target="_blank" rel="noopener">https://blog.csdn.net/nuoyanli/article/details/86513950</a></strong></p><h3 id="5-Java环境变量的配置"><a href="#5-Java环境变量的配置" class="headerlink" title="5.Java环境变量的配置"></a>5.Java环境变量的配置</h3><p><strong>详情请看：<a href="https://blog.csdn.net/nuoyanli/article/details/86513950" target="_blank" rel="noopener">https://blog.csdn.net/nuoyanli/article/details/86513950</a></strong></p><h3 id="6-第一个Java案例的编写和运行"><a href="#6-第一个Java案例的编写和运行" class="headerlink" title="6.第一个Java案例的编写和运行"></a>6.第一个Java案例的编写和运行</h3><p><strong>视频里老师用的是记事本进行编写和运行，而我用的是Eclipse Jee 2018-12</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">import java.util.*;</span><br><span class="line">import java.math.*;</span><br><span class="line">import java.io.*;</span><br><span class="line">public class Main &#123;</span><br><span class="line"></span><br><span class="line"> public static void main(String[] args) &#123;</span><br><span class="line">  &#x2F;&#x2F; TODO Auto-generated method stub</span><br><span class="line">        System.out.println(&quot;Hello world&quot;);</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、计算机基础&quot;&gt;&lt;a href=&quot;#一、计算机基础&quot; class=&quot;headerlink&quot; title=&quot;一、计算机基础&quot;&gt;&lt;/a&gt;一、计算机基础&lt;/h2&gt;&lt;h3 id=&quot;1-计算机概述&quot;&gt;&lt;a href=&quot;#1-计算机概述&quot; class=&quot;headerlink&quot; title=&quot;1.计算机概述&quot;&gt;&lt;/a&gt;1.计算机概述&lt;/h3&gt;&lt;p&gt;  &lt;strong&gt;计算机全称为：电子计算机，俗称电脑&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java系统学习-JavaSE篇" scheme="https://stephencurry6666.github.io/categories/Java%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0-JavaSE%E7%AF%87/"/>
    
    
      <category term="Java系统学习" scheme="https://stephencurry6666.github.io/tags/Java%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Java系统学习规划(1)——JavaSE篇</title>
    <link href="https://stephencurry6666.github.io/2020/05/04/Java%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E8%A7%84%E5%88%92(1)%E2%80%94JavaSE%E7%AF%87/"/>
    <id>https://stephencurry6666.github.io/2020/05/04/Java%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E8%A7%84%E5%88%92(1)%E2%80%94JavaSE%E7%AF%87/</id>
    <published>2020-05-04T09:55:56.852Z</published>
    <updated>2020-05-04T13:44:29.027Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p><strong>关于为什么要在现在系统的学习Java，是因为我觉得去年暑假学习的一些Java知识基本都忘记了(<del>其实是因为今年疫情影响，很大概率原地退役，所以也算为以后做做准备</del>)</strong></p><a id="more"></a><h2 id="Java系统学习规划-1"><a href="#Java系统学习规划-1" class="headerlink" title="Java系统学习规划(1)"></a>Java系统学习规划(1)</h2><h3 id="一、"><a href="#一、" class="headerlink" title="一、"></a>一、</h3><p><strong>选择什么课程：这里的话我是选择了刘意老师的深入浅出精华版为主，毕向东老师的Java基础教程为辅来进行学习。</strong></p><p>这里给出刘意老师视频的B站地址：<a href="https://www.bilibili.com/video/BV1Jt411w7fR?from=search&amp;seid=5273427619493979344" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1Jt411w7fR?from=search&amp;seid=5273427619493979344</a></p><p>这里给出毕向东老师视频的B站地址：<a href="https://www.bilibili.com/video/BV1pt41127na?from=search&amp;seid=9126689322584219690" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1pt41127na?from=search&amp;seid=9126689322584219690</a></p><h3 id="二、"><a href="#二、" class="headerlink" title="二、"></a>二、</h3><p><strong>学习重点参考</strong> </p><p>初学者也容易想走捷径。我相信很多人都会有这个想法：能不能只学工作上要用的？根本原因是知识点真的太多了。以刘意老师视频为例，面向对象（封装，继承，多态），异常，多线程，集合框架，IO，网络编程都挺难的。其中面向对象是JavaSE的重中之重，里面的知识点个人认为是最难的。后面的知识点都是建立在这之上展开的，没学好面向对象，后面就会稀里糊涂。当然，也不是真的一点都不能跳，但最好完整地学下来。按照后面JavaWeb的学习来看，我的建议是：</p><ul><li><strong>面向对象是基石，JavaSE中最重要的一是集合，二是IO，</strong> 希望大家学习这两个知识点时认真对待，多敲代码，多思考。</li><li><strong>常用API里，String及其相关类StringBuilder, StringBuffer</strong> 等必须熟悉，后面会不断用到。不学好的话，后面怎么死都不知道！</li><li><strong>泛型一般只出现在集合中</strong> ，个人觉得如果一时无法掌握，那么<strong>暂时会在集合中使用泛型就行了。</strong></li><li>反射对于初学者来说是<strong>非常抽象的！！</strong> 但它又无比重要。它虽然不是JavaSE的重点，但是<strong>它是JavaWeb很多难点的底层支撑，不懂反射，寸步难行。</strong></li></ul><p><strong>重点</strong></p><ul><li>面向对象☆☆☆☆☆</li><li>集合☆☆☆☆☆</li><li>IO ☆☆☆☆☆</li><li>String/StringBuffer/StringBuilder ☆☆☆☆☆</li><li>反射☆☆☆☆☆</li><li>泛型☆☆☆☆</li></ul><p><strong>熟悉</strong></p><ul><li>异常</li><li>多线程</li></ul><p><strong>先过一遍</strong></p><ul><li>网络编程</li><li>正则表达式</li></ul><h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><p><strong>这里给出刘意老师视频的配套资料</strong></p><p>2015年版本刘意Java基础配套资料：<a href="https://pan.baidu.com/s/13slfA9U23PiXca_ROPC0ww" target="_blank" rel="noopener">https://pan.baidu.com/s/13slfA9U23PiXca_ROPC0ww</a>   提取码：rmkv</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;关于为什么要在现在系统的学习Java，是因为我觉得去年暑假学习的一些Java知识基本都忘记了(&lt;del&gt;其实是因为今年疫情影响，很大概率原地退役，所以也算为以后做做准备&lt;/del&gt;)&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java系统学习-JavaSE篇" scheme="https://stephencurry6666.github.io/categories/Java%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0-JavaSE%E7%AF%87/"/>
    
    
      <category term="Java系统学习" scheme="https://stephencurry6666.github.io/tags/Java%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>我的第一篇博客</title>
    <link href="https://stephencurry6666.github.io/2020/04/30/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <id>https://stephencurry6666.github.io/2020/04/30/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</id>
    <published>2020-04-30T10:50:48.798Z</published>
    <updated>2020-05-01T01:56:59.839Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hexo的一些语法"><a href="#Hexo的一些语法" class="headerlink" title="Hexo的一些语法"></a>Hexo的一些语法</h2><h3 id="常见命令"><a href="#常见命令" class="headerlink" title="常见命令"></a>常见命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">**hexo new &quot;postName&quot; #新建文章</span><br><span class="line">hexo new page &quot;pageName&quot; #新建页面</span><br><span class="line">hexo generate #生成静态页面至public目录</span><br><span class="line">hexo server #开启预览访问端口（默认端口4000，&#39;ctrl + c&#39;关闭server）</span><br><span class="line">hexo deploy #部署到GitHub</span><br><span class="line">hexo help  # 查看帮助</span><br><span class="line">hexo version  #查看Hexo的版本**</span><br><span class="line">hexo clean  #清除缓存文件和静态文件</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="缩写"><a href="#缩写" class="headerlink" title="缩写"></a>缩写</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo n &#x3D;&#x3D; hexo new</span><br><span class="line">hexo g &#x3D;&#x3D; hexo generate</span><br><span class="line">hexo s &#x3D;&#x3D; hexo server</span><br><span class="line">hexo d &#x3D;&#x3D; hexo deploy</span><br></pre></td></tr></table></figure><h3 id="组合命令"><a href="#组合命令" class="headerlink" title="组合命令"></a>组合命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo s -g #生成并本地预览</span><br><span class="line">hexo d -g #生成并上传</span><br></pre></td></tr></table></figure><h3 id="在生成一篇新的博客的一些操作"><a href="#在生成一篇新的博客的一些操作" class="headerlink" title="在生成一篇新的博客的一些操作"></a>在生成一篇新的博客的一些操作</h3><p><strong>首先：hexo new/n + 博客标题(标题需加双引号)<br>然后：运行后会自动生成markdown格式的文章<br>然后：按创建成功后的提示信息（路径）进入到该文件所在的目录中，将md后缀的文件在Visual Studio Code中打开，可以在Visual Studio Code中下载一个markdownlint插件进行编辑。<br>最后：编辑完成后返回主目录blog(cd … 返回上一层目录)<br>运行 hexo clean 清除缓存文件和静态文件（非必要）<br>运行 hexo generate/g 生成静态博客文件<br>运行 hexo server/s 启动博客</strong></p><h3 id="如何把个人博客部署到远端"><a href="#如何把个人博客部署到远端" class="headerlink" title="如何把个人博客部署到远端"></a>如何把个人博客部署到远端</h3><p><strong>在blog目录下运行命令 hexo deploy/d 将本地博客部署到github<br>部署过程中按要求输入 github 的账号和密码<br>完成后就可直接通过该仓库名（username.github.io）访问博客了</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Hexo的一些语法&quot;&gt;&lt;a href=&quot;#Hexo的一些语法&quot; class=&quot;headerlink&quot; title=&quot;Hexo的一些语法&quot;&gt;&lt;/a&gt;Hexo的一些语法&lt;/h2&gt;&lt;h3 id=&quot;常见命令&quot;&gt;&lt;a href=&quot;#常见命令&quot; class=&quot;headerlink&quot; title=&quot;常见命令&quot;&gt;&lt;/a&gt;常见命令&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;**hexo new &amp;quot;postName&amp;quot; #新建文章&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo new page &amp;quot;pageName&amp;quot; #新建页面&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo generate #生成静态页面至public目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo server #开启预览访问端口（默认端口4000，&amp;#39;ctrl + c&amp;#39;关闭server）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo deploy #部署到GitHub&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo help  # 查看帮助&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo version  #查看Hexo的版本**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo clean  #清除缓存文件和静态文件&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="Hexo的一些基本用法和编写博客的一些注意事项" scheme="https://stephencurry6666.github.io/tags/Hexo%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95%E5%92%8C%E7%BC%96%E5%86%99%E5%8D%9A%E5%AE%A2%E7%9A%84%E4%B8%80%E4%BA%9B%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/"/>
    
  </entry>
  
  <entry>
    <title>Hello Stephencurry6666</title>
    <link href="https://stephencurry6666.github.io/2020/04/30/hello-world/"/>
    <id>https://stephencurry6666.github.io/2020/04/30/hello-world/</id>
    <published>2020-04-30T03:20:40.007Z</published>
    <updated>2020-05-02T09:44:29.808Z</updated>
    
    <content type="html"><![CDATA[<h3 id="科学公式-TeX-KaTeX"><a href="#科学公式-TeX-KaTeX" class="headerlink" title="科学公式 TeX(KaTeX)"></a>科学公式 TeX(KaTeX)</h3><script type="math/tex; mode=display">E=mc^2</script><p>行内的公式<script type="math/tex">E=mc^2</script>行内的公式，行内的<script type="math/tex">E=mc^2</script>公式。</p><script type="math/tex; mode=display">x > y</script><script type="math/tex; mode=display">(\sqrt{3x-1}+(1+x)^2)</script><script type="math/tex; mode=display">\sin(\alpha)^{\theta}=\sum_{i=0}^{n}(x^i + \cos(f))</script><script type="math/tex; mode=display">\iint_{a}^{b}\frac{\mathrm{3} }{\mathrm{3} x}</script><a id="more"></a><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><!--more--><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;科学公式-TeX-KaTeX&quot;&gt;&lt;a href=&quot;#科学公式-TeX-KaTeX&quot; class=&quot;headerlink&quot; title=&quot;科学公式 TeX(KaTeX)&quot;&gt;&lt;/a&gt;科学公式 TeX(KaTeX)&lt;/h3&gt;&lt;script type=&quot;math/tex; mode=display&quot;&gt;E=mc^2&lt;/script&gt;&lt;p&gt;行内的公式&lt;script type=&quot;math/tex&quot;&gt;E=mc^2&lt;/script&gt;行内的公式，行内的&lt;script type=&quot;math/tex&quot;&gt;E=mc^2&lt;/script&gt;公式。&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;x &gt; y&lt;/script&gt;&lt;script type=&quot;math/tex; mode=display&quot;&gt;(\sqrt{3x-1}+(1+x)^2)&lt;/script&gt;&lt;script type=&quot;math/tex; mode=display&quot;&gt;\sin(\alpha)^{\theta}=\sum_{i=0}^{n}(x^i + \cos(f))&lt;/script&gt;&lt;script type=&quot;math/tex; mode=display&quot;&gt;\iint_{a}^{b}\frac{\mathrm{3} }{\mathrm{3} x}&lt;/script&gt;
    
    </summary>
    
    
    
  </entry>
  
</feed>
